// CHECKBOX & RADIO BUTTONS : form-elements/checkbox.scss
// --------------

// Custom checkox & Radio buttons 

$checkButtonTextColor-darkUI: rgba(255,255,255,0.65);
$checkButtonTextColor: #5a5a5a;



$checkButtonBorderColor: rgba(140,140,140,0.5);

@mixin check-base {
    width: 1.6rem;
    height: 1.6rem;
    display: inline-block;
    position: relative;
    background: transparent;
    border: 2px solid rgba(0, 0, 0, 0.2);
    vertical-align: middle;
    font-family: $baseFontFamily;
    @include transition(all, 0.2s, ease-out);
}

.sd-checkbox {
    @include check-base;
    @include border-radius(2px);
    &::after {
        font-family: 'sd_icons';
        content:'\e61d';
        font-weight: 400;
        font-size: 1.2rem;
        line-height: 1.2rem;
        height: 1.2rem;
        width: 1.2rem;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
        color: #fff;
        position: absolute;
        top: 0;
        left: 0;
        @include opacity(0);
        @include transition(all, 0.2s, ease-in);
        transform: scale(0.25, 0.25);
    }
    &:hover {
        border-color: rgba(0, 0, 0, 0.4);
        cursor: pointer;
    }
    &.checked, &[checked="checked"] {
        border-color: $sd-blue;
        background: $sd-blue;
        &::after {
            @include opacity(100);
            transform: scale(1, 1);
        }
        &:hover {
            border-color: darken($sd-blue, 10%);
            background-color: darken($sd-blue, 10%);
        }
    }
    // Modifier for .sd-checkbox to create a radio button
    &--radio {
        @include border-radius(50%);
        &::after {
            height: 0.8rem;
            width: 0.8rem;
            @include border-radius(50%);
            content:' ';
            position: absolute;
            background-color: $sd-blue;
            top: 0.2rem;
            left: 0.2rem;
            @include opacity(0);
            @include transition(all, 0.1s, ease-in);
            transform: scale(0.25, 0.25);
        }
        &.checked, &[checked="checked"] {
            border-color: $sd-blue;
            background: transparent;
            &::after {
                @include opacity(100);
                transform: scale(1, 1);
            }
            &:hover {
                background: transparent;
            }
        }
    }
    // This modifier creates button styled checkboxes or radio buttons
    &--button-style {
        width: auto;
        padding: 0 1.2rem;
        line-height: 1;
        color: $checkButtonTextColor;
        border: 1px solid $checkButtonBorderColor;
        @include border-radius(2px);
        @include transition(all, 0.2s, ease-out);
        display: inline-flex;
        align-items: center;
        text-align: center;
        height: 2.8rem;
        @include text-overflow;
        label {
            margin:0;
            display: inline;
            cursor: pointer;
            transition: none;
            text-align: center;
            line-height: 16px;
            font-family: $baseFontFamily;
            @include text-overflow;
        }
        [class^="icon-"], [class*=" icon-"] {
            color: currentColor;
        }
        i + label {
            margin-left: 8px;
        }

        &::after {
            content:'';
            display: none;
        }
        &:hover {
            color: darken($checkButtonTextColor, 30%);
            border-color: scale-color($checkButtonBorderColor, $alpha: 90%);
            @include box-shadow(0, 1px, 4px, 0, rgba(0,0,0,0.20));
        }
        &.checked, &[checked="checked"] {
            background-color: darken($sd-blue, 11%);
            border-color: darken($sd-blue, 11%);
            border-top-color: darken($sd-blue, 30%);
            @include box-shadow(0, 2px, 0, 0, rgba(0,0,0,0.20), true);
            color: $white;
            &:hover {
                color: $white;
                border-color: darken($sd-blue, 25%);
                background-color: darken($sd-blue, 14%);
                @include box-shadow(0, 2px, 0, 0, rgba(0,0,0,0.20), true);
            }
            label {
                color: $white;
            }
        }
        .sd-label--disabled { 
            opacity: 1 !important;
            cursor: not-allowed !important;
        }
    }
    &--disabled, &[disabled="disabled"] {
        opacity: 0.40;
        cursor: not-allowed !important;
        &:hover {
            color: $checkButtonTextColor;
            border-color: $checkButtonBorderColor;
            box-shadow: none;
        }

    }
}



.sd-checkbox + label {
    display: inline-block;
    vertical-align: middle;
}

.sd-check__wrapper + .sd-check__wrapper {
    margin-left: 0.8rem;
}
.sd-check__wrapper:first-child, .sd-check__wrapper:only-of-type {
    margin-left: 0;
}

.sd-check__wrapper {
    margin-left: 0.8rem;
    display: inline-block;
    .sd-checkbox + label {
        display: inline-block;
        vertical-align: middle;
        margin: 0 0 0 0.6rem;

        i {
            margin: 0 0.4rem 0 0.8rem;
        }
    }
    .sd-label--disabled { 
        opacity: 0.40;
    }
}


[class^="--dark-ui"],
[class*="--dark-ui"] {
    .sd-checkbox {
        border-color: rgba(255, 255, 255, 0.4);
        &:hover {
            border-color: rgba(255, 255, 255, 0.6);
        }
        &.checked, &[checked="checked"] {
            border-color: $sd-blue;
            &:hover {
                border-color: darken($sd-blue, 10%);
                background-color: darken($sd-blue, 10%);
            }
        }
    }
    .sd-checkbox--button-style {
        color: $checkButtonTextColor-darkUI;
        &:hover {
            color: scale-color($checkButtonTextColor-darkUI, $alpha: 100%);
        }
        &.checked, &[checked="checked"] {
            border-color: darken($sd-blue, 10%);
            border-top-color: darken($sd-blue, 20%);
            @include box-shadow(0, 2px, 0, 0, rgba(0,0,0,0.20), true);
            &:hover {
                border-color: darken($sd-blue, 25%);
            }
        }
    }
}