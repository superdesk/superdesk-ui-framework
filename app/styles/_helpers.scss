.pull-left {
    float: inline-start;
}

.pull-right {
    float: inline-end;
}

.clearfix {
    @include clearfix();
}

.no-padding {
    padding: 0 !important;
}

.no-margin {
    margin: 0 !important;
}

.no-border {
    border: 0 !important;
}

.no-line-height {
    line-height: 0 !important;
}

.cursor-pointer {
    cursor: pointer;
}

// DISPLAY HELPERS
// Use classes with the form '.sd-display-- ', others will be deprecated
.sd-display--none {
    display: none !important;
}

.sd-display--inline {
    display: inline !important;
}

.sd-display--inline-block {
    display: inline-block !important;
}

.sd-display--block {
    display: block !important;
}

// Browser ignores this element from the flow.
// Use it to wrap other elements without breaking the layout (e.g. flex or grid)
.sd-display--contents {
    display: contents !important;
}

// Display Table
.sd-display--table {
    display: table;
}

.sd-display--table-cell {
    display: table-cell;
}

.sd-display--table-row {
    display: table-row;
}

.sd-display--table-column {
    display: table-column;
}

.sd-display--table-column-group {
    display: table-column-group;
}

.sd-display--table-row-group {
    display: table-row-group;
}

.sd-display--table-footer-group {
    display: table-footer-group;
}

.sd-display--table-header-group {
    display: table-header-group;
}

.sd-display--table-caption {
    display: table-caption;
}

.sd-display--inline-flex {
    display: inline-flex !important;
}

.sd-display--flex {
    display: flex !important;
}

// FLEXBOX PROPERTIES
// Flex direction
.sd-flex--direction-row {
    flex-direction: row !important;
}

.sd-flex--direction-col {
    flex-direction: column !important;
}

.sd-flex--direction-row-reverse {
    flex-direction: row-reverse !important;
}

.sd-flex--direction-col-reverse {
    flex-direction: column-reverse !important;
}

// Flex wrap
.sd-flex--wrap {
    flex-wrap: wrap;
}

.sd-flex--wrap-reverse {
    flex-wrap: wrap-reverse;
}

.sd-flex--nowrap {
    flex-wrap: nowrap;
}

// Flex flex
.sd-flex--flex-1 {
    flex: 1 1 0%;
}

.sd-flex--flex-1 {
    flex: 1 1 0%;
}

.sd-flex--flex-auto {
    flex: 1 1 auto;
}

.sd-flex--flex-initial {
    flex: 0 1 auto;
}

.sd-flex--flex-none {
    flex: none;
}

// Flex shrink & grow
.sd-flex--shrink {
    flex-shrink: 1 !important;
}

.sd-flex--shrink-0 {
    flex-shrink: 0 !important;
}

.sd-flex--grow {
    flex-grow: 1 !important;
}

.sd-flex--grow-0 {
    flex-grow: 0 !important;
}

// Flex alignment
.sd-flex--justify-start {
    justify-content: flex-start !important;
}

.sd-flex--justify-end {
    justify-content: flex-end !important;
}

.sd-flex--justify-center {
    justify-content: center !important;
}

.sd-flex--justify-between {
    justify-content: space-between !important;
}

.sd-flex--justify-around {
    justify-content: space-around !important;
}

.sd-flex--justify-evenly {
    justify-content: space-evenly !important;
}

.sd-flex--items-start {
    align-items: flex-start !important;
}

.sd-flex--items-end {
    align-items: flex-end !important;
}

.sd-flex--items-center {
    align-items: center !important;
}

.sd-flex--items-baseline {
    align-items: baseline !important;
}

.sd-flex--items-stretch {
    align-items: stretch !important;
}

// Hide if empty
.sd-empty:empty {
    display: none !important;
}

// POSITION HELPERS
.sd-position--static {
    position: static;
}

.sd-position--fixed {
    position: fixed;
}

.sd-position--relative {
    position: relative;
}

.sd-position--absolute {
    position: absolute;
}

.sd-position--sticky {
    position: sticky;
}

// OVERFLOW HELPERS
.sd-overflow--auto {
    overflow: auto !important;
}

.sd-overflow--hidden {
    overflow: hidden !important;
}

.sd-overflow--visible {
    overflow: visible !important;
}

.sd-overflow--scroll {
    overflow: scroll !important;
}

.sd-overflow--x-auto {
    overflow-x: auto !important;
}

.sd-overflow--y-auto {
    overflow-y: auto !important;
}

.sd-overflow--x-hidden {
    overflow-x: hidden !important;
}

.sd-overflow--y-hidden {
    overflow-y: hidden !important;
}

.sd-overflow--x-visible {
    overflow-x: visible !important;
}

.sd-overflow--y-visible {
    overflow-y: visible !important;
}

.sd-overflow--x-scroll {
    overflow-x: scroll !important;
}

.sd-overflow--y-scroll {
    overflow-y: scroll !important;
}

// Text overflow
.sd-overflow-ellipsis,
.sd-overflow--ellipsis {
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
}

// OBJECT FIT HELPERS
.sd-object-fit--contain {
    object-fit: contain;
}

.sd-object-fit--cover {
    object-fit: cover;
}

.sd-object-fit--fill {
    object-fit: fill;
}

.sd-object-fit--none {
    object-fit: none;
}

.sd-object-fit--scale-down {
    object-fit: scale-down;
}

// OBJECT POSITION HELPERS
// Defines the positin of any selected replaced element (e.g., an <img>)
// within the box that contains it. For it to work it must be used with 'sd-object-fit--none' (object-fit: none;)

.sd-object-position--bottom {
    object-position: bottom;
}

.sd-object-position--center {
    object-position: center;
}

.sd-object-position--left {
    object-position: inline-start;
}

.sd-object-position--left-bottom {
    object-position: left bottom;
}

.sd-object-position--left-top {
    object-position: left top;
}

.sd-object-position--right {
    object-position: right;
}

.sd-object-position--right-bottom {
    object-position: right bottom;
}

.sd-object-position--right-top {
    object-position: right top;
}

.sd-object-position--top {
    object-position: top;
}

// SHADOW HELPER CLASSES

$sd-shadowProperties: (
    'z0': (none),
    'z1': (0 1px 3px rgba(0, 0, 0, .16), 0 0 1px rgba(0, 0, 0, .1)),
    'z2': (0 1px 4px rgba(0, 0, 0, .16), 0 2px 6px rgba(0, 0, 0, .12), 0 0 1px rgba(0, 0, 0, .1)),
    'z3': (0 1px 6px rgba(0, 0, 0, .16), 0 3px 8px rgba(0, 0, 0, .24), 0 0 1px rgba(0, 0, 0, .1)),
    'z4': (0 2px 10px rgba(0, 0, 0, .2), 0 6px 16px rgba(0, 0, 0, .3), 0 0 1px rgba(0, 0, 0, .1)),
);
// Add more shadow items with this syntax and new classes will be generated:
// z5: (0 2px 10px rgba(0,0,0,.2), ... ),
// Output:
// .sd-shadow--z5 { 0 2px 10px rgba(0,0,0,.2),...

@mixin shadowMixinExtend {
    transition: box-shadow 0.3s ease-out;

    &.btn:active {
        box-shadow: none !important;
        transition: box-shadow 0.4s ease-out;
    }
}

@each $name,
$value in $sd-shadowProperties {
    .sd-shadow--#{$name} {
        box-shadow: #{$value} !important;
        @include shadowMixinExtend;
    }
}

// sd-shadow mixin
// Uses items from $sd-shadowProperties as parameter (z1, z2...)
// You can create new classes with this syntax:
// .customClass { @include sd-shadow(z1); color: #fff; }
// Output:
// .customClass { box-shadow: 0 1px 3px rgba(0, 0, 0, 0.16), 0 0 1px rgba(0, 0, 0, 0.1); color: #fff; }

@mixin sd-shadow($sd-shadowPropertiesItem) {
    box-shadow: #{map-get($sd-shadowProperties, $sd-shadowPropertiesItem)};
}

// How to use sd-shadow mixin
// .nekaKlasa {
//     color: red;
//     @include sd-shadow('z1');
// }


// WEBKIT SCROLL
::-webkit-scrollbar {
    width: 8px;
    height: 8px;
    margin: -1px 0;
    position: fixed;
    inset-inline-end: 10px;
}

::-webkit-scrollbar:hover {
    background-color: var(--sd-colour__webkit-scrollbar--hover);
    cursor: pointer;
}

::-webkit-scrollbar-thumb {
    background: var(--sd-colour__webkit-scrollbar-thumb);
}

::-webkit-scrollbar-thumb:hover {
    background: var(--sd-colour__webkit-scrollbar-thumb--hover);
    cursor: pointer;
}

// HEADINGS
.sd-heading-3 {
    font-size: 1.6rem;
    margin-block-end: 1.6rem;
}

// Deafult text syles based on type of data
p strong {
    font-weight: 500;
}

time {
    color: $sd-text-light;
    font-weight: 400;
    letter-spacing: .025em;

    &.small {
        font-size: calc(100% - 0.1rem);
    }
}

// TYPOGRAPHY HELPERS
// -------------------------------------------------

h1,
h2,
h3,
h4,
h5,
h6 {
    margin: 0;
}

.sd-heading {
    margin: 0;
}

.sd-heading--h1 {
    font-size: calc(var(--text-size--base) * 2.4);
    font-weight: 400;
}

.sd-heading--h2 {
    font-size: calc(var(--text-size--base) * 2);
    font-weight: 500;
}

.sd-heading--h3 {
    font-size: calc(var(--text-size--base) * 1.6);
    font-weight: 400;
}

.sd-heading--h4 {
    font-size: calc(var(--text-size--base) * 1.5);
    font-weight: 500;
}

.sd-heading--h5 {
    font-size: calc(var(--text-size--base) * 1.4);
    font-weight: 500;
}

.sd-heading--h6 {
    font-size: calc(var(--text-size--base) * 1.2);
    font-weight: 500;
    text-transform: uppercase;
    color: var(--color-text-light);
    letter-spacing: 0.06em;

}

.sd-text {
    font-size: 1.4rem;
    line-height: 1.4;
}

.sd-time {
    font-size: 1.2rem;
    display: inline-block;
    color: var(--color-text-light);
    letter-spacing: 0.025em;
}

// Font weights

.sd-text__light,
.sd-text--light {
    font-weight: 300;
}

.sd-text__normal,
.sd-text--normal {
    font-weight: 400;
}

.sd-text--medium {
    font-weight: 500;
}

.sd-text__strong,
.sd-text--strong {
    font-weight: 700;
}

.sd-text--bold {
    font-weight: 700;
}

// Font style
.sd-text__italic,
.sd-text--italic {
    font-style: italic;
}

.sd-text--non-italic {
    font-style: normal;
}

// Text alignment
.sd-text-align--left,
.sd-text-align--start {
    text-align: start;
}

.sd-text__center,
.sd-text-align--center {
    text-align: center;
}

.sd-text__right,
.sd-text-align--right,
.sd-text-align--end {
    text-align: end;
}

.sd-text-align--justify {
    text-align: justify;
}

// Font family
.sd-text__serif,
.sd-text--serif {
    font-family: $baseFontFamilySerif;
}

.sd-text--sans {
    font-family: $baseFontFamily;
}

.sd-text--mono {
    font-family: $baseFontFamilyMono;
}

// Word Break
.sd-word-break--normal {
    overflow-wrap: normal;
    word-break: normal;
}

.sd-word-break--words {
    overflow-wrap: break-word;
}

.sd-word-break--all {
    word-break: break-all;
}

// Whitespace
.sd-whitespace--normal {
    white-space: normal;
}

.sd-whitespace--nowrap {
    white-space: nowrap;
}

.sd-whitespace--pre {
    white-space: pre;
}

.sd-whitespace--pre-line {
    white-space: pre-line;
}

.sd-whitespace--pre-wrap {
    white-space: pre-wrap;
}

// Text Transform
.sd-txt-transform--uppercase {
    text-transform: uppercase;
}

.sd-txt-transform--lowercase {
    text-transform: lowercase;
}

.sd-txt-transform--capitalize {
    text-transform: capitalize;
}

.sd-txt-transform--none {
    text-transform: none;
}

// Text Decoration
.sd-txt-decoration--underline {
    text-decoration: underline;
}

.sd-txt-decoration--line-through {
    text-decoration: line-through;
}

.sd-txt-decoration--none {
    text-decoration: none;
}

// Line Clamp
// limit the number of horizontal lines in an elemnt (e.g. <p>)
// it doesn't work if the element has set flex-grow: 1;
@mixin line-clamp-base {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
}

.sd-line-clamp--1 {
    @include line-clamp-base;
    -webkit-line-clamp: 1;
}

.sd-line-clamp--2 {
    @include line-clamp-base;
    -webkit-line-clamp: 2;
}

.sd-line-clamp--3 {
    @include line-clamp-base;
    -webkit-line-clamp: 3;
}

.sd-line-clamp--4 {
    @include line-clamp-base;
    -webkit-line-clamp: 4;
}

.sd-line-clamp--5 {
    @include line-clamp-base;
    -webkit-line-clamp: 5;
}

.sd-line-clamp--6 {
    @include line-clamp-base;
    -webkit-line-clamp: 6;
}

.sd-line-clamp--none {
    -webkit-line-clamp: unset;
}

// Superdesk specific text helpers
.sd-text__slugline {
    color: $sd-slugline;
    font-weight: 500;
    font-size: 1.2rem;
    text-transform: uppercase;
    margin-inline-end: 1rem;
}

.sd-text__title {
    color: inherit;
    font-weight: 500;
    font-size: 1.6rem;
    line-height: 1.4;
}

.sd-text__date-time {
    color: var(--color-text-light);
    font-weight: 400;
    letter-spacing: .025em;
}

.sd-text__date-time--small {
    font-size: 1.2rem;
}

.sd-text__date-and-author {
    font-size: 1.3rem;
}

.sd-text__author {
    font-weight: 500;
}

.sd-text__info {
    font-weight: 300;
    color: var(--color-text-light);
}

.sd-text-icon {
    display: inline-flex;

    i {
        margin-inline-end: 0.3rem;
    }
}

.sd-text-icon+.sd-text-icon {
    margin-inline-end: 1rem;
}

.sd-text-icon.sd-text-icon--aligned-r+.sd-text-icon.sd-text-icon--aligned-r {
    margin-inline-end: 0;
    margin-inline-start: 1rem;
}

// Opacity helpers
.sd-opacity--20 {
    opacity: 0.2 !important;
}

.sd-opacity--25 {
    opacity: 0.25 !important;
}

.sd-opacity--30 {
    opacity: 0.3 !important;
}

.sd-opacity--40 {
    opacity: 0.4 !important;
}

.sd-opacity--50 {
    opacity: 0.5 !important;
}

.sd-opacity--60 {
    opacity: 0.6 !important;
}

.sd-opacity--75 {
    opacity: 0.75 !important;
}


// Margin auto
.ml-auto,
.sd-margin-l--auto,
.sd-margin-s--auto {
    margin-inline-start: auto !important;
}

.mr-auto,
.sd-margin-r--auto,
.sd-margin-e--auto {
    margin-inline-end: auto !important;
}

.mt-auto,
.sd-margin-t--auto {
    margin-block-start: auto !important;
}

.mb-auto,
.sd-margin-b--auto {
    margin-block-end: auto !important;
}

.mlr-auto,
.sd-margin-x--auto {
    margin-inline-start: auto !important;
    margin-inline-end: auto !important;
}

.sd-margin-y--auto {
    margin-block-start: auto !important;
    margin-block-end: auto !important;
}

.sd-margin--auto {
    margin: auto !important;
}

// MARGINS ---------------------------------------------- //
// MARGIN (all sides)
.m-0,
.sd-margin--0 {
    margin: 0 !important;
}
.m-0-5,
.sd-margin--0-5 {
    margin: calc(0.5 * var(--base-increment)) !important;
}
.m-1,
.sd-margin--1 {
    margin: calc(1 * var(--base-increment)) !important;
}
.m-1-5,
.sd-margin--1-5 {
    margin: calc(1.5 * var(--base-increment)) !important;
}
.m-2,
.sd-margin--2 {
    margin: calc(2 * var(--base-increment)) !important;
}
.m-3,
.sd-margin--3 {
    margin: calc(3 * var(--base-increment)) !important;
}
.m-4,
.sd-margin--4 {
    margin: calc(4 * var(--base-increment)) !important;
}
.m-5,
.sd-margin--5 {
    margin: calc(5 * var(--base-increment)) !important;
}
// MARGIN INLINE START (left)
.ms-0,
.sd-margin-l--0 {
    margin-inline-start: 0 !important;
}
.ms-0-5,
.sd-margin-l--0-5 {
    margin-inline-start: calc(0.5 * var(--base-increment)) !important;
}
.ms-1,
.sd-margin-l--1 {
    margin-inline-start: calc(1 * var(--base-increment)) !important;
}
.ms-1-5,
.sd-margin-l--1-5 {
    margin-inline-start: calc(1.5 * var(--base-increment)) !important;
}
.ms-2,
.sd-margin-l--2 {
    margin-inline-start: calc(2 * var(--base-increment)) !important;
}
.ms-3,
.sd-margin-l--3 {
    margin-inline-start: calc(3 * var(--base-increment)) !important;
}
.ms-4,
.sd-margin-l--4 {
    margin-inline-start: calc(4 * var(--base-increment)) !important;
}
.ms-5,
.sd-margin-l--5 {
    margin-inline-start: calc(5 * var(--base-increment)) !important;
}
// MARGIN INLINE END (right)
.me-0,
.sd-margin-r--0 {
    margin-inline-end: 0 !important;
}
.me-0-5,
.sd-margin-r--0-5 {
    margin-inline-end: calc(0.5 * var(--base-increment)) !important;
}
.me-1,
.sd-margin-r--1 {
    margin-inline-end: calc(1 * var(--base-increment)) !important;
}
.me-1-5,
.sd-margin-r--1-5 {
    margin-inline-end: calc(1.5 * var(--base-increment)) !important;
}
.me-2,
.sd-margin-r--2 {
    margin-inline-end: calc(2 * var(--base-increment)) !important;
}
.me-3,
.sd-margin-r--3 {
    margin-inline-end: calc(3 * var(--base-increment)) !important;
}
.me-4,
.sd-margin-r--4 {
    margin-inline-end: calc(4 * var(--base-increment)) !important;
}
.me-5,
.sd-margin-r--5 {
    margin-inline-end: calc(5 * var(--base-increment)) !important;
}
// MARGIN INLINE (x, left and right)
.mx-0,
.sd-margin-x--0 {
    margin-inline-start: 0 !important;
    margin-inline-end: 0 !important;
}
.mx-0-5,
.sd-margin-r--0-5 {
    margin-inline-start: calc(0.5 * var(--base-increment)) !important;
    margin-inline-end: calc(0.5 * var(--base-increment)) !important;
}
.mx-1,
.sd-margin-x--1 {
    margin-inline-start: calc(1 * var(--base-increment)) !important;
    margin-inline-end: calc(1 * var(--base-increment)) !important;
}
.mx-1-5,
.sd-margin-x--1-5 {
    margin-inline-start: calc(1.5 * var(--base-increment)) !important;
    margin-inline-end: calc(1.5 * var(--base-increment)) !important;
}
.mx-2,
.sd-margin-x--2 {
    margin-inline-start: calc(2 * var(--base-increment)) !important;
    margin-inline-end: calc(2 * var(--base-increment)) !important;
}
.mx-3,
.sd-margin-x--3 {
    margin-inline-start: calc(3 * var(--base-increment)) !important;
    margin-inline-end: calc(3 * var(--base-increment)) !important;
}
.mx-4,
.sd-margin-x--4 {
    margin-inline-start: calc(4 * var(--base-increment)) !important;
    margin-inline-end: calc(4 * var(--base-increment)) !important;
}
.mx-5,
.sd-margin-x--5 {
    margin-inline-start: calc(5 * var(--base-increment)) !important;
    margin-inline-end: calc(5 * var(--base-increment)) !important;
}
// MARGIN BLOCK START (top)
.mt-0,
.sd-margin-t--0 {
    margin-block-start: 0 !important;
}
.mt-0-5,
.sd-margin-t--0-5 {
    margin-block-start: calc(0.5 * var(--base-increment)) !important;
}
.mt-1,
.sd-margin-t--1 {
    margin-block-start: calc(1 * var(--base-increment)) !important;
}
.mt-1-5,
.sd-margin-t--1-5 {
    margin-block-start: calc(1.5 * var(--base-increment)) !important;
}
.mt-2,
.sd-margin-t--2 {
    margin-block-start: calc(2 * var(--base-increment)) !important;
}
.mt-3,
.sd-margin-t--3 {
    margin-block-start: calc(3 * var(--base-increment)) !important;
}
.mt-4,
.sd-margin-t--4 {
    margin-block-start: calc(4 * var(--base-increment)) !important;
}
.mt-5,
.sd-margin-t--5 {
    margin-block-start: calc(5 * var(--base-increment)) !important;
}
// MARGIN BLOCK END (bottom)
.mb--0,
.sd-margin-b--0 {
    margin-block-end: 0 !important;
}
.mb-0-5,
.sd-margin-b--0-5 {
    margin-block-end: calc(0.5 * var(--base-increment)) !important;
}
.mb-1,
.sd-margin-b--1 {
    margin-block-end: calc(1 * var(--base-increment)) !important;
}
.mb-1-5,
.sd-margin-b--1-5 {
    margin-block-end: calc(1.5 * var(--base-increment)) !important;
}
.mb-2,
.sd-margin-b--2 {
    margin-block-end: calc(2 * var(--base-increment)) !important;
}
.mb-3,
.sd-margin-b--3 {
    margin-block-end: calc(3 * var(--base-increment)) !important;
}
.mb-4,
.sd-margin-b--4 {
    margin-block-end: calc(4 * var(--base-increment)) !important;
}
.mb-5,
.sd-margin-b--5 {
    margin-block-end: calc(5 * var(--base-increment)) !important;
}
// MARGIN BLOCK (y, top & bottom)
.my-0,
.sd-margin-y--0 {
    margin-block-start: 0 !important;
    margin-block-end: 0 !important;
}
.my-0-5,
.sd-margin-y--0-5 {
    margin-block-start: calc(0.5 * var(--base-increment)) !important;
    margin-block-end: calc(0.5 * var(--base-increment)) !important;
}
.my-1,
.sd-margin-y--1 {
    margin-block-start: calc(1 * var(--base-increment)) !important;
    margin-block-end: calc(1 * var(--base-increment)) !important;
}
.my-1-5,
.sd-margin-y--1-5 {
    margin-block-start: calc(1.5 * var(--base-increment)) !important;
    margin-block-end: calc(1.5 * var(--base-increment)) !important;
}
.my-2,
.sd-margin-y--2 {
    margin-block-start: calc(2 * var(--base-increment)) !important;
    margin-block-end: calc(2 * var(--base-increment)) !important;
}
.my-3,
.sd-margin-y--3 {
    margin-block-start: calc(3 * var(--base-increment)) !important;
    margin-block-end: calc(3 * var(--base-increment)) !important;
}
.my-4,
.sd-margin-y--4 {
    margin-block-start: calc(4 * var(--base-increment)) !important;
    margin-block-end: calc(4 * var(--base-increment)) !important;
}
.my-5,
.sd-margin-y--5 {
    margin-block-start: calc(5 * var(--base-increment)) !important;
    margin-block-end: calc(5 * var(--base-increment)) !important;
}
// PADDINGS ---------------------------------------------- //
// PADDING (all sides)
.p-0,
.sd-padding--0 {
    padding: 0 !important;
}
.p-0-5,
.sd-padding--0-5 {
    padding: calc(0.5 * var(--base-increment)) !important;
}
.p-1,
.sd-padding--1 {
    padding: calc(1 * var(--base-increment)) !important;
}
.p-1-5,
.sd-padding--1-5 {
    padding: calc(1.5 * var(--base-increment)) !important;
}
.p-2,
.sd-padding--2 {
    padding: calc(2 * var(--base-increment)) !important;
}
.p-3,
.sd-padding--3 {
    padding: calc(3 * var(--base-increment)) !important;
}
.p-4,
.sd-padding--4 {
    padding: calc(4 * var(--base-increment)) !important;
}
.p-5,
.sd-padding--5 {
    padding: calc(5 * var(--base-increment)) !important;
}
// PADDING INLINE START (left)
.ps-0,
.sd-padding-l--0 {
    padding-inline-start: 0 !important;
}
.ps-0-5,
.sd-padding-l--0-5 {
    padding-inline-start: calc(0.5 * var(--base-increment)) !important;
}
.ps-1,
.sd-padding-l--1 {
    padding-inline-start: calc(1 * var(--base-increment)) !important;
}
.ps-1-5,
.sd-padding-l--1-5 {
    padding-inline-start: calc(1.5 * var(--base-increment)) !important;
}
.ps-2,
.sd-padding-l--2 {
    padding-inline-start: calc(2 * var(--base-increment)) !important;
}
.ps-3,
.sd-padding-l--3 {
    padding-inline-start: calc(3 * var(--base-increment)) !important;
}
.ps-4,
.sd-padding-l--4 {
    padding-inline-start: calc(4 * var(--base-increment)) !important;
}
.ps-5,
.sd-padding-l--5 {
    padding-inline-start: calc(5 * var(--base-increment)) !important;
}
// PADDING INLINE END (right)
.pe-0,
.sd-padding-r--0 {
    padding-inline-end: 0 !important;
}
.pe-0-5,
.sd-padding-r--0-5 {
    padding-inline-end: calc(0.5 * var(--base-increment)) !important;
}
.pe-1,
.sd-padding-r--1 {
    padding-inline-end: calc(1 * var(--base-increment)) !important;
}
.pe-1-5,
.sd-padding-r--1-5 {
    padding-inline-end: calc(1.5 * var(--base-increment)) !important;
}
.pe-2,
.sd-padding-r--2 {
    padding-inline-end: calc(2 * var(--base-increment)) !important;
}
.pe-3,
.sd-padding-r--3 {
    padding-inline-end: calc(3 * var(--base-increment)) !important;
}
.pe-4,
.sd-padding-r--4 {
    padding-inline-end: calc(4 * var(--base-increment)) !important;
}
.pe-5,
.sd-padding-r--5 {
    padding-inline-end: calc(5 * var(--base-increment)) !important;
}
// PADDING INLINE (x, left and right)
.px-0,
.sd-padding-x--0 {
    padding-inline-start: 0 !important;
    padding-inline-end: 0 !important;
}
.px-0-5,
.sd-padding-r--0-5 {
    padding-inline-start: calc(0.5 * var(--base-increment)) !important;
    padding-inline-end: calc(0.5 * var(--base-increment)) !important;
}
.px-1,
.sd-padding-x--1 {
    padding-inline-start: calc(1 * var(--base-increment)) !important;
    padding-inline-end: calc(1 * var(--base-increment)) !important;
}
.px-1-5,
.sd-padding-x--1-5 {
    padding-inline-start: calc(1.5 * var(--base-increment)) !important;
    padding-inline-end: calc(1.5 * var(--base-increment)) !important;
}
.px-2,
.sd-padding-x--2 {
    padding-inline-start: calc(2 * var(--base-increment)) !important;
    padding-inline-end: calc(2 * var(--base-increment)) !important;
}
.px-3,
.sd-padding-x--3 {
    padding-inline-start: calc(3 * var(--base-increment)) !important;
    padding-inline-end: calc(3 * var(--base-increment)) !important;
}
.px-4,
.sd-padding-x--4 {
    padding-inline-start: calc(4 * var(--base-increment)) !important;
    padding-inline-end: calc(4 * var(--base-increment)) !important;
}
.px-5,
.sd-padding-x--5 {
    padding-inline-start: calc(5 * var(--base-increment)) !important;
    padding-inline-end: calc(5 * var(--base-increment)) !important;
}
// PADDING BLOCK START (top)
.pt-0,
.sd-padding-t--0 {
    padding-block-start: 0 !important;
}
.pt-0-5,
.sd-padding-t--0-5 {
    padding-block-start: calc(0.5 * var(--base-increment)) !important;
}
.pt-1,
.sd-padding-t--1 {
    padding-block-start: calc(1 * var(--base-increment)) !important;
}
.pt-1-5,
.sd-padding-t--1-5 {
    padding-block-start: calc(1.5 * var(--base-increment)) !important;
}
.pt-2,
.sd-padding-t--2 {
    padding-block-start: calc(2 * var(--base-increment)) !important;
}
.pt-3,
.sd-padding-t--3 {
    padding-block-start: calc(3 * var(--base-increment)) !important;
}
.pt-4,
.sd-padding-t--4 {
    padding-block-start: calc(4 * var(--base-increment)) !important;
}
.pt-5,
.sd-padding-t--5 {
    padding-block-start: calc(5 * var(--base-increment)) !important;
}
// PADDING BLOCK END (bottom)
.pb--0,
.sd-padding-b--0 {
    padding-block-end: 0 !important;
}
.pb-0-5,
.sd-padding-b--0-5 {
    padding-block-end: calc(0.5 * var(--base-increment)) !important;
}
.pb-1,
.sd-padding-b--1 {
    padding-block-end: calc(1 * var(--base-increment)) !important;
}
.pb-1-5,
.sd-padding-b--1-5 {
    padding-block-end: calc(1.5 * var(--base-increment)) !important;
}
.pb-2,
.sd-padding-b--2 {
    padding-block-end: calc(2 * var(--base-increment)) !important;
}
.pb-3,
.sd-padding-b--3 {
    padding-block-end: calc(3 * var(--base-increment)) !important;
}
.pb-4,
.sd-padding-b--4 {
    padding-block-end: calc(4 * var(--base-increment)) !important;
}
.pb-5,
.sd-padding-b--5 {
    padding-block-end: calc(5 * var(--base-increment)) !important;
}
// PADDING BLOCK (y, top & bottom)
.py-0,
.sd-padding-y--0 {
    padding-block-start: 0 !important;
    padding-block-end: 0 !important;
}
.py-0-5,
.sd-padding-y--0-5 {
    padding-block-start: calc(0.5 * var(--base-increment)) !important;
    padding-block-end: calc(0.5 * var(--base-increment)) !important;
}
.py-1,
.sd-padding-y--1 {
    padding-block-start: calc(1 * var(--base-increment)) !important;
    padding-block-end: calc(1 * var(--base-increment)) !important;
}
.py-1-5,
.sd-padding-y--1-5 {
    padding-block-start: calc(1.5 * var(--base-increment)) !important;
    padding-block-end: calc(1.5 * var(--base-increment)) !important;
}
.py-2,
.sd-padding-y--2 {
    padding-block-start: calc(2 * var(--base-increment)) !important;
    padding-block-end: calc(2 * var(--base-increment)) !important;
}
.py-3,
.sd-padding-y--3 {
    padding-block-start: calc(3 * var(--base-increment)) !important;
    padding-block-end: calc(3 * var(--base-increment)) !important;
}
.py-4,
.sd-padding-y--4 {
    padding-block-start: calc(4 * var(--base-increment)) !important;
    padding-block-end: calc(4 * var(--base-increment)) !important;
}
.py-5,
.sd-padding-y--5 {
    padding-block-start: calc(5 * var(--base-increment)) !important;
    padding-block-end: calc(5 * var(--base-increment)) !important;
}

// padding all  (KILL THIS AFTER REFACTORING)
.sd-padding-all--0 {
    padding: 0 !important;
}

.sd-padding-all--0-5 {
    padding: $sd-base-increment * 0.5 !important;
}

.sd-padding-all--1 {
    padding: $sd-base-increment !important;
}

.sd-padding-all--1-5 {
    padding: $sd-base-increment * 1.5 !important;
}

.sd-padding-all--2 {
    padding: $sd-base-increment * 2 !important;
}

.sd-padding-all--3 {
    padding: $sd-base-increment * 3 !important;
}

// margin all (KILL THIS AFTER REFACTORING)
.sd-margin-all--0 {
    margin: 0 !important;
}

.sd-margin-all--0-5 {
    margin: $sd-base-increment * 0.5 !important;
}

.sd-margin-all--1 {
    margin: $sd-base-increment * 1 !important;
}

.sd-margin-all--1-5 {
    margin: $sd-base-increment * 1.5 !important;
}

.sd-margin-all--2 {
    margin: $sd-base-increment * 2 !important;
}

.sd-margin-all--3 {
    margin: $sd-base-increment * 3 !important;
}

// END


.sd-wrap-helper {
    display: contents !important;
}

.sd-accessibility__btn-text--invisible,
.sd-accessibility__screenreader-text {
    position: absolute;
    top: 0;
    inset-inline-start: 0;
    font-size: 0.1rem;
    color: transparent !important;
    pointer-events: none;
}

// remove this after refactoring
.overflow-auto {
    overflow: auto !important;
}

.overflow-hidden {
    overflow: hidden !important;
}

.overflow-x-hidden {
    overflow-x: hidden !important;
}

.sd-d-none {
    display: none !important;
}

.sd-d-inline {
    display: inline !important;
}

.sd-d-inline-block {
    display: inline-block !important;
}

.sd-d-block {
    display: block !important;
}

.sd-d-flex {
    display: flex !important;
}

.sd-d-inline-flex {
    display: inline-flex !important;
}

.sd-display-flex-column {
    display: flex;
    flex-direction: column;
    overflow: auto;
}

.sd-flex-wrap {
    flex-wrap: wrap;
}

.sd-flex-shrink {
    flex-shrink: 1 !important;
}

.sd-flex-no-shrink {
    flex-shrink: 0 !important;
}

.sd-flex-justify-end {
    justify-content: flex-end !important;
}

.sd-flex-justify-center {
    justify-content: center !important;
}

.sd-flex-justify-space-between {
    justify-content: space-between !important;
}

.sd-flex-align-items-center {
    align-items: center !important;
}

.sd-flex-grow {
    flex-grow: 1 !important;
}

.sd-flex-no-grow {
    flex-grow: 0 !important;
}

.sd-no-wrap {
    white-space: nowrap;
}


// Border Radius
.sd-radius--x-small {
    border-radius: var(--b-radius--x-small);
}

.sd-radius--small {
    border-radius: var(--b-radius--small);
}

.sd-radius--medium {
    border-radius: var(--b-radius--medium);
}

.sd-radius--large {
    border-radius: var(--b-radius--large);
}

.sd-radius--x-large {
    border-radius: var(--b-radius--x-large);
}

.sd-radius--full {
    border-radius: var(--b-radius--full);
}

// Border
.sd-border--x-light {
    border: 1px solid var(--sd-colour-line--x-light);
}

.sd-border--light {
    border: 1px solid var(--sd-colour-line--light);
}

.sd-border--medium {
    border: 1px solid var(--sd-colour-line--medium);
}

.sd-border--strong {
    border: 1px solid var(--sd-colour-line--strong);
}

.sd-border--x-light {
    border: 1px solid var(--sd-colour-line--x-light);
}

.sd-border-style--dotted {
    border-style: dotted !important;
}

.sd-border-style--dashed {
    border-style: dashed !important;
}

.sd-border-width--2 {
    border-width: 2px;
}

.sd-border-width--3 {
    border-width: 3px;
}

// Font size
.sd-font-size--x-small {
    font-size: calc(var(--text-size--base) * 1.2); // 12px;
}

.sd-font-size--small {
    font-size: calc(var(--text-size--base) * 1.4); // 14px;
}

.sd-font-size--medium {
    font-size: calc(var(--text-size--base) * 1.6); // 16px;
}

.sd-font-size--large {
    font-size: calc(var(--text-size--base) * 2); // 20px;
}

// Text colour
.sd-text-color--lighter {
    color: var(--color-text-lighter) !important;
}

.sd-text-color--light {
    color: var(--color-text-light) !important;
}

.sd-text-color--normal {
    color: var(--color-text) !important;
}

// Background colours
.sd-panel-bg--100 {
    background-color: var(--sd-colour-panel-bg--100);
}

.sd-panel-bg--000 {
    background-color: var(--sd-item__main-Bg);
}

.sd-panel-bg--gradient-1 {
    background-color: var(--sd-item__main-Bg);
    background: linear-gradient(180deg, var(--sd-colour-interactive--alpha-20) 0%, var(--sd-item__main-Bg) 40%);
}

.sd-state--focus:focus-within,
.sd-state--active {
    box-shadow: var(--sd-shadow__item--selected) !important;
    transition: box-shadow 0.3s ease, filter 0.3s ease;
}

.sd-width--xxx-small {
    width: var(--width__container--xxx-small) !important;
}

.sd-width--xx-small {
    width: var(--width__container--xx-small);
}

.sd-width--x-small {
    width: var(--width__container--x-small);
}

.sd-width--small {
    width: var(--width__container--small);
}

.sd-width--medium {
    width: var(--width__container--medium);
}

.sd-width--large {
    width: var(--width__container--large);
}

.sd-width--x-large {
    width: var(--width__container--x-large);
}

.sd-width--xx-large {
    width: var(--width__container--xx-large);
}

.sd-width--xxx-large {
    width: var(--width__container--xxx-large);
}

.sd-width--full {
    width: var(--width__container--full);
}

.sd-gap--x-small {
    gap: var(--gap--x-small);
}

.sd-gap--small {
    gap: var(--gap--small);
}

.sd-gap--medium {
    gap: var(--gap--medium);
}

.sd-gap--large {
    gap: var(--gap--large);
}

.sd-gap--x-large {
    gap: var(--gap--x-large);
}

.sd-gap--xx-large {
    gap: var(--gap--xx-large);
}

.sd-gap--auto {
    gap: var(--gap--auto);
}

// MAX-HEIGHT:

.max-h-full {
    max-height: 100%;
}
